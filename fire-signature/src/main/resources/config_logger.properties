############################################################
#  	Default Logging Configuration File
#
# You can use a different file by specifying a filename
# with the java.util.logging.config.file system property.  
# For example java -Djava.util.logging.config.file=myfile
############################################################

############################################################
#  	Global properties
############################################################

# "handlers" specifies a comma separated list of log Handler 
# classes.  These handlers will be installed during VM startup.
# Note that these classes must be on the system classpath.
# By default we only configure a ConsoleHandler, which will only
# show messages at the INFO and above levels.
#handlers= java.util.logging.ConsoleHandler

# To also add the FileHandler, use the following line instead.
handlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler

es.gob.fire.hanlers=java.util.logging.FileHandler
es.gob.fire.services.hanlers=java.util.logging.FileHandler
es.gob.fire.services.FireLogger.hanlers=java.util.logging.FileHandler
es.gob.fire.server.hanlers=java.util.logging.FileHandler
es.gob.fire.signature.hanlers=java.util.logging.FileHandler
es.gob.fire.test.hanlers=java.util.logging.FileHandler

# Default global logging level.
# This specifies which kinds of events are logged across
# all loggers.  For any given facility this global level
# can be overriden by a facility specific level
# Note that the ConsoleHandler also has a separate level
# setting to limit messages printed to the console.
.level= INFO

############################################################
# Handler specific properties.
# Describes specific configuration info for Handlers.
############################################################

# default file output is in user's home directory.
java.util.logging.FileHandler.pattern = %h/java%u.log
java.util.logging.FileHandler.limit = 50000
java.util.logging.FileHandler.count = 1
java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter

# Limit the message that are printed on the console to INFO and above.
java.util.logging.ConsoleHandler.level = INFO
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter

# Example to customize the SimpleFormatter output format 
# to print one-line log message like this:
#     <level>: <log message> [<date/time>]
#
#Donde los argumentos son: 
# %0  formato: la cadena de formato java.util.Formatter especificada en la propiedad java.util.logging.SimpleFormatter.format o el formato predeterminado. 
# %1  date: un objeto Date que representa la hora del evento del registro. 
# %2  fuente - una cadena que representa al que llama, si está disponible; de lo contrario, el nombre del logger. 
# %3  registrador - el nombre del logger. 
# %4  nivel - el nivel de registro. 
# %5  mensaje: el mensaje de registro formateado devuelto por el método Formatter.formatMessage (LogRecord). Utiliza el formato java.text y no usa el argumento de formato java.util.Formatter. 
# %7  throw - una cadena que representa el throwable asociado con el registro de registro y su backtrace que comienza con un carácter de nueva línea, si lo hay; de lo contrario, una cadena vacía.
# java.util.logging.SimpleFormatter.format=%4$s: %5$s [%1$tc]%n
java.util.logging.SimpleFormatter.format="%4$s %1$tF %1$tT %2$s %5$s %n"
############################################################
# Facility specific properties.
# Provides extra control for each logger.
############################################################

# For example, set the com.xyz.foo logger to only log SEVERE
# messages:
es.gob.fire.server.level = SEVERE
es.gob.fire.services.level=WARNING
es.gob.fire.services.FireLogger.level=INFO
##########################################
# 
#
##########################################

# Ruta del directorio para el almacenamiento de los log generados. Si no se indica, se
# utilizara el directorio de temporales del sistema (no recomendado debido a que sobre este
# directorio se aplicara la politica de gestión de los logs).
logs.dir=C:/LOGS/fire

#
logs.packages=es.gob.fire,es.gob.fire.server,es.gob.fire.signature,es.gob.fire.test

#Configuración de la rotación de los logs, DIARIA, HORARIA, POR_MINUTOS
#
#DIARIA 		yyyy-MM-dd 		-->Rota el archivo a la media noche todos los días.
#HORARIA  		yyyy-MM-dd-HH	--> Rota el archivo al inicio de cada hora.
#POR_MINUTOS	yyyy-MM-dd-HH-mm--> Rota el archivo al inicio de cada minuto.
logs.rollingDate=POR_MINUTOS